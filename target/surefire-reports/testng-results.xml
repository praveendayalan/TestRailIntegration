<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="728" started-at="2019-10-31T16:21:01 EDT" finished-at="2019-10-31T16:21:02 EDT">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="728" started-at="2019-10-31T16:21:01 EDT" finished-at="2019-10-31T16:21:02 EDT">
      <class name="com.swtestacademy.TestNGProject">
        <test-method status="PASS" signature="createSuite(org.testng.ITestContext)[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="createSuite" is-config="true" duration-ms="1106" started-at="2019-10-31T16:21:00 EDT" finished-at="2019-10-31T16:21:01 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6f96c77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSuite -->
        <test-method status="PASS" signature="beforeTest(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="beforeTest" is-config="true" duration-ms="1" started-at="2019-10-31T16:21:01 EDT" finished-at="2019-10-31T16:21:01 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6f96c77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.swtestacademy.TestNGProject.invalidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="invalidLogin()[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="invalidLogin" duration-ms="4" started-at="2019-10-31T16:21:01 EDT" finished-at="2019-10-31T16:21:01 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.swtestacademy.TestNGProject.invalidLogin(TestNGProject.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="afterTest" is-config="true" duration-ms="357" started-at="2019-10-31T16:21:01 EDT" finished-at="2019-10-31T16:21:02 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=FAILURE method=TestNGProject.invalidLogin()[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6f96c77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="beforeTest" is-config="true" duration-ms="0" started-at="2019-10-31T16:21:02 EDT" finished-at="2019-10-31T16:21:02 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6f96c77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.swtestacademy.TestNGProject.validLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="validLogin()[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="validLogin" duration-ms="0" started-at="2019-10-31T16:21:02 EDT" finished-at="2019-10-31T16:21:02 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624]" name="afterTest" is-config="true" duration-ms="330" started-at="2019-10-31T16:21:02 EDT" finished-at="2019-10-31T16:21:02 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=TestNGProject.validLogin()[pri:0, instance:com.swtestacademy.TestNGProject@5e3a8624] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6f96c77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.swtestacademy.TestNGProject -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
